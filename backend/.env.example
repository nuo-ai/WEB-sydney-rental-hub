# Sydney Rental Hub - Environment Configuration Example
# Copy this file to .env and update with your actual values

# ==============================================
# APPLICATION SETTINGS
# ==============================================
ENVIRONMENT=development
SECRET_KEY=your_super_secret_key_change_this_in_production
FRONTEND_URL=http://localhost:5173

# ==============================================
# DATABASE SETTINGS
# ==============================================
# Database configuration is handled through your existing Supabase connection
# Development-friendly DB connection tuning (to avoid pgBouncer session pool exhaustion)
ENVIRONMENT=development
# Use small pool sizes in development; production can raise as needed
DB_POOL_MIN_SIZE=1
DB_POOL_MAX_SIZE=3
# Set to true to bypass pooling entirely (direct connections). Useful when seeing:
# "FATAL: MaxClientsInSessionMode: max clients reached"
DB_NO_POOL=false
# Optional explicit Postgres URL (otherwise use discrete vars if provided)
# DATABASE_URL=postgres://user:pass@host:5432/dbname

# For Supabase PgBouncer transaction pooling (recommended to avoid MaxClients in session mode):
# Use port 6543 instead of 5432. Example:
# DATABASE_URL=postgres://USER:PASSWORD@aws-0-ap-southeast-2.pooler.supabase.com:6543/postgres?sslmode=require

# ==============================================
# EMAIL SERVICE CONFIGURATION
# ==============================================

# Email Provider (smtp, sendgrid, mailgun, aws_ses)
EMAIL_PROVIDER=smtp

# Email Sender Information
FROM_EMAIL=noreply@sydneyrentalhub.com
FROM_NAME=Sydney Rental Hub

# Development Settings
LOG_EMAILS=true

# ==============================================
# SMTP CONFIGURATION (Gmail Example)
# ==============================================
# For Gmail, you need to use App Password (not your regular password)
# 1. Enable 2-Factor Authentication
# 2. Generate App Password: https://myaccount.google.com/apppasswords
# 3. Use the 16-character app password below

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_16_character_app_password
SMTP_USE_TLS=true
SMTP_USE_SSL=false

# ==============================================
# SENDGRID CONFIGURATION (Alternative)
# ==============================================
# If using SendGrid instead of SMTP:
# EMAIL_PROVIDER=sendgrid
# SENDGRID_API_KEY=your_sendgrid_api_key

# ==============================================
# MAILGUN CONFIGURATION (Alternative)
# ==============================================
# If using Mailgun instead of SMTP:
# EMAIL_PROVIDER=mailgun
# MAILGUN_API_KEY=your_mailgun_api_key
# MAILGUN_DOMAIN=your_mailgun_domain.com

# ==============================================
# AWS SES CONFIGURATION (Alternative)
# ==============================================
# If using AWS SES instead of SMTP:
# EMAIL_PROVIDER=aws_ses
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=us-east-1

# ==============================================
# OTHER API KEYS
# ==============================================
API_KEY=your_api_key_for_internal_services
GOOGLE_MAPS_API_KEY=your_google_maps_api_key

# ==============================================
# EMAIL SETUP INSTRUCTIONS
# ==============================================

# DEVELOPMENT MODE:
# - In development mode, emails are logged to console instead of being sent
# - Set ENVIRONMENT=development to enable this behavior
# - Great for testing without sending actual emails

# PRODUCTION MODE:
# - Set ENVIRONMENT=production
# - Configure one of the email providers above
# - Emails will be sent through your chosen provider

# GMAIL SETUP (Most Common):
# 1. Go to https://myaccount.google.com/security
# 2. Enable "2-Step Verification"
# 3. Go to https://myaccount.google.com/apppasswords
# 4. Select "Mail" and your device/app name
# 5. Copy the generated 16-character password
# 6. Use that password in SMTP_PASSWORD (not your Gmail password)

# SENDGRID SETUP:
# 1. Sign up at https://sendgrid.com
# 2. Create an API key with "Mail Send" permissions
# 3. Set EMAIL_PROVIDER=sendgrid and SENDGRID_API_KEY=your_api_key

# MAILGUN SETUP:
# 1. Sign up at https://mailgun.com
# 2. Add and verify your domain
# 3. Get your API key and domain from the dashboard
# 4. Set EMAIL_PROVIDER=mailgun, MAILGUN_API_KEY and MAILGUN_DOMAIN

# AWS SES SETUP:
# 1. Set up AWS SES in your AWS account
# 2. Verify your sending domain/email
# 3. Create IAM user with SES permissions
# 4. Set EMAIL_PROVIDER=aws_ses and AWS credentials
